project(ADMFD)

add_executable(MFDDIFF diffusion.cpp)
add_executable(NMFDDIFF diffusion_nonlinear.cpp)
add_executable(MFDELAST elastic.cpp)

target_link_libraries(MFDDIFF inmost)
target_link_libraries(NMFDDIFF inmost)
target_link_libraries(MFDELAST inmost)

if(USE_SOLVER)
  if(USE_SOLVER_ANI)
    message("linking MFDDIFF with ani3d and BLAS")
    target_link_libraries(MFDDIFF ani3d ${BLAS_LIBRARIES})
    if(BLAS_LINKER_FLAGS)
      set_target_properties(MFDDIFF PROPERTIES LINK_FLAGS "${BLAS_LINKER_FLAGS}")
    endif()
  endif()
  if(USE_SOLVER_PETSC)
    message("linking MFDDIFF with PETSc")
    target_link_libraries(MFDDIFF ${PETSC_LIBRARIES})
  endif()
  if(USE_SOLVER_TRILINOS)
    message("linking MFDDIFF with Trilinos")
    target_link_libraries(MFDDIFF ${Trilinos_LIBRARIES} ${Trilinos_TPL_LIBRARIES})
  endif()
  if(USE_SOLVER_METIS)
    message("linking MFDDIFF with Metis")
    target_link_libraries(MFDDIFF ${METIS_LIBRARIES})
  endif()
  if(USE_SOLVER_MONDRIAAN)
    message("linking MFDDIFF with Mondriaan")
    target_link_libraries(MFDDIFF ${MONDRIAAN_LIBRARIES})
  endif()
  if(USE_SOLVER_SUPERLU)
    message("linking MFDDIFF with SuperLU")
    target_link_libraries(MFDDIFF ${SUPERLU_LIBRARIES})
  endif()
endif()


if(USE_PARTITIONER)
  if(USE_PARTITIONER_ZOLTAN)
    message("linking MFDDIFF with Zoltan")
    target_link_libraries(MFDDIFF ${ZOLTAN_LIBRARIES})
  endif()
  if(USE_PARTITIONER_PARMETIS)
    message("linking MFDDIFF with ParMETIS")
    target_link_libraries(MFDDIFF ${PARMETIS_LIBRARIES})
  endif()
endif()

if(USE_MPI)
  message("linking MFDDIFF with MPI")
  target_link_libraries(MFDDIFF ${MPI_LIBRARIES}) 
  if(MPI_LINK_FLAGS)
    set_target_properties(MFDDIFF PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS}")
  endif() 
endif(USE_MPI)


if(USE_SOLVER)
  if(USE_SOLVER_ANI)
    message("linking NMFDDIFF with ani3d and BLAS")
    target_link_libraries(NMFDDIFF ani3d ${BLAS_LIBRARIES})
    if(BLAS_LINKER_FLAGS)
      set_target_properties(NMFDDIFF PROPERTIES LINK_FLAGS "${BLAS_LINKER_FLAGS}")
    endif()
  endif()
  if(USE_SOLVER_PETSC)
    message("linking NMFDDIFF with PETSc")
    target_link_libraries(NMFDDIFF ${PETSC_LIBRARIES})
  endif()
  if(USE_SOLVER_TRILINOS)
    message("linking NMFDDIFF with Trilinos")
    target_link_libraries(NMFDDIFF ${Trilinos_LIBRARIES} ${Trilinos_TPL_LIBRARIES})
  endif()
  if(USE_SOLVER_METIS)
    message("linking NMFDDIFF with Metis")
    target_link_libraries(NMFDDIFF ${METIS_LIBRARIES})
  endif()
  if(USE_SOLVER_MONDRIAAN)
    message("linking NMFDDIFF with Mondriaan")
    target_link_libraries(NMFDDIFF ${MONDRIAAN_LIBRARIES})
  endif()
  if(USE_SOLVER_SUPERLU)
    message("linking NMFDDIFF with SuperLU")
    target_link_libraries(NMFDDIFF ${SUPERLU_LIBRARIES})
  endif()
endif()


if(USE_PARTITIONER)
  if(USE_PARTITIONER_ZOLTAN)
    message("linking NMFDDIFF with Zoltan")
    target_link_libraries(NMFDDIFF ${ZOLTAN_LIBRARIES})
  endif()
  if(USE_PARTITIONER_PARMETIS)
    message("linking NMFDDIFF with ParMETIS")
    target_link_libraries(NMFDDIFF ${PARMETIS_LIBRARIES})
  endif()
endif()

if(USE_MPI)
  message("linking NMFDDIFF with MPI")
  target_link_libraries(NMFDDIFF ${MPI_LIBRARIES}) 
  if(MPI_LINK_FLAGS)
    set_target_properties(NMFDDIFF PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS}")
  endif() 
endif(USE_MPI)


if(USE_SOLVER)
  if(USE_SOLVER_ANI)
    message("linking MFDELAST with ani3d and BLAS")
    target_link_libraries(MFDELAST ani3d ${BLAS_LIBRARIES})
    if(BLAS_LINKER_FLAGS)
      set_target_properties(MFDELAST PROPERTIES LINK_FLAGS "${BLAS_LINKER_FLAGS}")
    endif()
  endif()
  if(USE_SOLVER_PETSC)
    message("linking MFDELAST with PETSc")
    target_link_libraries(MFDELAST ${PETSC_LIBRARIES})
  endif()
  if(USE_SOLVER_TRILINOS)
    message("linking MFDELAST with Trilinos")
    target_link_libraries(MFDELAST ${Trilinos_LIBRARIES} ${Trilinos_TPL_LIBRARIES})
  endif()
  if(USE_SOLVER_METIS)
    message("linking MFDELAST with Metis")
    target_link_libraries(MFDELAST ${METIS_LIBRARIES})
  endif()
  if(USE_SOLVER_MONDRIAAN)
    message("linking MFDELAST with Mondriaan")
    target_link_libraries(MFDELAST ${MONDRIAAN_LIBRARIES})
  endif()
  if(USE_SOLVER_SUPERLU)
    message("linking MFDELAST with SuperLU")
    target_link_libraries(MFDELAST ${SUPERLU_LIBRARIES})
  endif()
endif()


if(USE_PARTITIONER)
  if(USE_PARTITIONER_ZOLTAN)
    message("linking MFDELAST with Zoltan")
    target_link_libraries(MFDELAST ${ZOLTAN_LIBRARIES})
  endif()
  if(USE_PARTITIONER_PARMETIS)
    message("linking MFDELAST with ParMETIS")
    target_link_libraries(MFDELAST ${PARMETIS_LIBRARIES})
  endif()
endif()

if(USE_MPI)
  message("linking MFDELAST with MPI")
  target_link_libraries(MFDELAST ${MPI_LIBRARIES}) 
  if(MPI_LINK_FLAGS)
    set_target_properties(MFDELAST PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS}")
  endif() 
endif(USE_MPI)

install(TARGETS MFDDIFF EXPORT inmost-targets RUNTIME DESTINATION bin)
install(TARGETS NMFDDIFF EXPORT inmost-targets RUNTIME DESTINATION bin)
install(TARGETS MFDELAST EXPORT inmost-targets RUNTIME DESTINATION bin)
