project(MFDES)
set(SOURCE main.cpp)

add_executable(MFDES ${SOURCE})

target_link_libraries(MFDES inmost)

if(USE_SOLVER)
  if(USE_SOLVER_ANI)
    message("linking MFDES with ani3d and BLAS")
    target_link_libraries(MFDES ani3d ${BLAS_LIBRARIES})
    if(BLAS_LINKER_FLAGS)
      set_target_properties(MFDES PROPERTIES LINK_FLAGS "${BLAS_LINKER_FLAGS}")
    endif()
  endif()
  if(USE_SOLVER_PETSC)
    message("linking MFDES with PETSc")
    target_link_libraries(MFDES ${PETSC_LIBRARIES})
  endif()
  if(USE_SOLVER_TRILINOS)
    message("linking MFDES with Trilinos")
    target_link_libraries(MFDES ${Trilinos_LIBRARIES} ${Trilinos_TPL_LIBRARIES})
  endif()
  if(USE_SOLVER_METIS)
    message("linking MFDES with Metis")
    target_link_libraries(MFDES ${METIS_LIBRARIES})
  endif()
  if(USE_SOLVER_MONDRIAAN)
    message("linking MFDES with Mondriaan")
    target_link_libraries(MFDES ${MONDRIAAN_LIBRARIES})
  endif()
  if(USE_SOLVER_SUPERLU)
    message("linking MFDES with SuperLU")
    target_link_libraries(MFDES ${SUPERLU_LIBRARIES})
  endif()
endif()


if(USE_PARTITIONER)
  if(USE_PARTITIONER_ZOLTAN)
    message("linking MFDES with Zoltan")
    target_link_libraries(MFDES ${ZOLTAN_LIBRARIES})
  endif()
  if(USE_PARTITIONER_PARMETIS)
    message("linking MFDES with ParMETIS")
    target_link_libraries(MFDES ${PARMETIS_LIBRARIES})
  endif()
endif()

if(USE_MPI)
  message("linking MFDES with MPI")
  target_link_libraries(MFDES ${MPI_LIBRARIES}) 
  if(MPI_LINK_FLAGS)
    set_target_properties(MFDES PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS}")
  endif() 
endif(USE_MPI)

install(TARGETS MFDES EXPORT inmost-targets RUNTIME DESTINATION bin)
